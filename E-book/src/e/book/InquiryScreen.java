/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package e.book;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ButtonGroup;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class InquiryScreen extends javax.swing.JFrame {

    /**
     * Creates new form MemberScreen
     */
    //make it fill for multiple authors is it working?
    //rename SeachColumns and SortByColumns to match the actual data base names
    //Do the Similar books button (Genre already stored)
    DefaultTableModel Inquirymodel;

    ResultSet rs;
    ResultSet rs0;

    Statement stmt;
    Statement stmt0;

    private final String[] Columns = {"ISBN", "Title", "Price", "Page_Count", "Book_Type", "Author", "Publisher"};

    String[] SearchColumns = {"ISBN", "Title", "Price", "Page_Count", "Book_Type"};
    int SearchComboBoxIndex = 0;

    String[] SortByColumns = {"Title", "Price", "Page_Count", "Book_Type", "Author_ID_fk", "Publisher_Name"};
    int SortComboBoxIndex = 0;
    private String sorting = "ASC";

    //private String Genre = "";
    ImageIcon image = new ImageIcon("H:\\Unicurriculum\\Year2\\Sem1\\DataBase\\Project\\New folder\\E-book\\src\\e\\book\\E-Book.png");

    public InquiryScreen() {
        initComponents();

        this.setTitle("E-Books Collection");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setIconImage(image.getImage());

        ButtonGroup sortGroup = new ButtonGroup();
        sortGroup.add(AscRadioButton);
        sortGroup.add(DescRadioButton);
        AscRadioButton.doClick();

        SceneManager.drawColumns(Columns, Inquirymodel, InquiryTable);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        InquiryTable = new javax.swing.JTable();
        SelectAll = new javax.swing.JButton();
        SearchByComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        SortByComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        SearchField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        SearchBtn = new javax.swing.JButton();
        AscRadioButton = new javax.swing.JRadioButton();
        DescRadioButton = new javax.swing.JRadioButton();
        HomeBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(24, 146, 124));

        InquiryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        InquiryTable.setGridColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(InquiryTable);

        SelectAll.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SelectAll.setText("Select All");
        SelectAll.setActionCommand("LoginUs");
        SelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAllActionPerformed(evt);
            }
        });

        SearchByComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ISBN", "Title ", "Price", "Page_Count", "Book_Type" }));
        SearchByComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchByComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Search Field");

        SortByComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Title ", "Price", "Page_Count", "Book_Type", "Author", "Publisher" }));
        SortByComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortByComboBoxActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Sort by");

        SearchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchFieldActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Search by");

        SearchBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        SearchBtn.setText("Search");
        SearchBtn.setActionCommand("LoginUs");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        AscRadioButton.setBackground(new java.awt.Color(24, 146, 124));
        AscRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        AscRadioButton.setText("Ascending");
        AscRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AscRadioButtonActionPerformed(evt);
            }
        });

        DescRadioButton.setBackground(new java.awt.Color(24, 146, 124));
        DescRadioButton.setForeground(new java.awt.Color(255, 255, 255));
        DescRadioButton.setText("Descending");
        DescRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescRadioButtonActionPerformed(evt);
            }
        });

        HomeBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        HomeBtn.setText("Home");
        HomeBtn.setActionCommand("LoginUs");
        HomeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(297, 297, 297)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(HomeBtn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(SearchByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(7, 7, 7)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(202, 202, 202)
                                .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(194, 194, 194)
                                .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 203, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AscRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DescRadioButton, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(SortByComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(SelectAll)
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SearchByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(SearchField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SortByComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(AscRadioButton)
                        .addGap(5, 5, 5)
                        .addComponent(DescRadioButton)))
                .addGap(32, 32, 32)
                .addComponent(SelectAll, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(HomeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAllActionPerformed
        Inquirymodel = new DefaultTableModel();

        for (String Column : Columns) {
            Inquirymodel.addColumn(Column);
        }
        InquiryTable.setModel(Inquirymodel);

        try {
            stmt = SceneManager.con.createStatement();
            stmt0 = SceneManager.con.createStatement();
            rs = stmt.executeQuery("select ISBN,Title,Price,Page_Count,Book_Type,Publisher_Name,Author_ID_fk from Book left join Book_Author on (ISBN=ISBN_fk) join Publisher on (Publisher_Code=Publisher_code_B_fk)"
                    + " order by " + SortByColumns[SortComboBoxIndex] + " " + sorting
            );
            int i = 0;
            while (rs.next()) {
                Inquirymodel.addRow(new Object[]{
                    rs.getInt("ISBN"), rs.getString("Title"), rs.getInt("Price"), rs.getInt("Page_Count"), rs.getString("Book_Type"), rs.getString("Author_ID_fk"), rs.getString("Publisher_Name")
                });

                int isbn = Integer.parseInt(InquiryTable.getValueAt(i, 0).toString());
                rs0 = stmt0.executeQuery("select First_Name , Last_Name, ISBN_fk from Author join Book_Author on Author_ID_fk = Author_ID where ISBN_fk = "
                        + isbn);

                String fname, lname;
                String authors = "";
                // A.Wael,
                while (rs0.next()) {
                    fname = rs0.getString("First_Name");
                    lname = rs0.getString("Last_Name");
                    authors += fname.toUpperCase().charAt(0) + "." + lname + " ,";
                }
                InquiryTable.setValueAt(authors, i, 5);
                i++;
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }//GEN-LAST:event_SelectAllActionPerformed

    private void SearchByComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchByComboBoxActionPerformed
        // TODO add your handling code here:
        SearchComboBoxIndex = SearchByComboBox.getSelectedIndex();
    }//GEN-LAST:event_SearchByComboBoxActionPerformed

    private void SortByComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortByComboBoxActionPerformed
        // TODO add your handling code here:
        SortComboBoxIndex = SortByComboBox.getSelectedIndex();
    }//GEN-LAST:event_SortByComboBoxActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed

        Inquirymodel = new DefaultTableModel();

        for (String Column : Columns) {
            Inquirymodel.addColumn(Column);
        }
        InquiryTable.setModel(Inquirymodel);

        String temp = "";

        try {
            stmt = SceneManager.con.createStatement();
            stmt0 = SceneManager.con.createStatement();
            if (!("".equals(SearchField.getText()))) {
                temp = SearchField.getText().trim();
                stmt = SceneManager.con.createStatement();

                if (SearchComboBoxIndex == 0 || SearchComboBoxIndex == 2 || SearchComboBoxIndex == 3) {
                    // where the search input is a number    
                    rs = stmt.executeQuery("select ISBN,Title,Price,Page_Count,Book_Type,Publisher_Name,Author_ID_fk from Book left join Book_Author on (ISBN=ISBN_fk) join Publisher on (Publisher_Code=Publisher_code_B_fk)"
                            + " where " + SearchColumns[SearchComboBoxIndex] + " = " + temp
                            + " order by " + SortByColumns[SortComboBoxIndex] + " " + sorting
                    );
                } else {
                    temp = "'" + temp + "'";
                    rs = stmt.executeQuery("select ISBN,Title,Price,Page_Count,Book_Type,Publisher_Name,Author_ID_fk from Book left join Book_Author on (ISBN=ISBN_fk) join Publisher on (Publisher_Code=Publisher_code_B_fk)"
                            + " where " + SearchColumns[SearchComboBoxIndex] + " = " + temp
                            + " order by " + SortByColumns[SortComboBoxIndex] + " " + sorting
                    );
                }

            } else {
                JOptionPane.showMessageDialog(this, "You have to enter Something to Search!");
                return;
            }
            try {
                int i = 0;
                while (rs.next()) {
                    Inquirymodel.addRow(new Object[]{
                        rs.getInt("ISBN"), rs.getString("Title"), rs.getInt("Price"), rs.getInt("Page_Count"), rs.getString("Book_Type"), rs.getString("Author_ID_fk"), rs.getString("Publisher_Name")
                    });

                    int isbn = Integer.parseInt(InquiryTable.getValueAt(i, 0).toString());
                    rs0 = stmt0.executeQuery("select First_Name , Last_Name, ISBN_fk from Author join Book_Author on Author_ID_fk = Author_ID where ISBN_fk = "
                            + isbn);

                    String fname, lname;
                    String authors = "";

                    while (rs0.next()) {
                        fname = rs0.getString("First_Name");
                        lname = rs0.getString("Last_Name");
                        authors += fname.toUpperCase().charAt(0) + "." + lname + " ,";
                    }
                    InquiryTable.setValueAt(authors, i, 5);
                    i++;
                }

                int isbn = Integer.parseInt(InquiryTable.getValueAt(0, 0).toString());
                rs0 = stmt.executeQuery("select First_Name , Last_Name, ISBN_fk from Author join Book_Author on Author_ID_fk = Author_ID where ISBN_fk = "
                        + isbn);
                String fname, lname;
                String authors = "";
                while (rs0.next()) {
                    fname = rs0.getString("First_Name");
                    lname = rs0.getString("Last_Name");

                    authors += fname.toUpperCase().charAt(0) + "." + lname + " ,";
                }

                InquiryTable.setValueAt(authors, 0, 5);
            } catch (java.lang.ArrayIndexOutOfBoundsException e) {
                JOptionPane.showMessageDialog(this, "Doesn't Exist");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }


    }//GEN-LAST:event_SearchBtnActionPerformed

    private void SearchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchFieldActionPerformed

    private void AscRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AscRadioButtonActionPerformed
        // TODO add your handling code here:
        sorting = "ASC";
    }//GEN-LAST:event_AscRadioButtonActionPerformed

    private void HomeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeBtnActionPerformed
        // TODO add your handling code here:
        SceneManager.changeScreen(SceneManager.Screens.HOME);
    }//GEN-LAST:event_HomeBtnActionPerformed

    private void DescRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescRadioButtonActionPerformed
        // TODO add your handling code here:
        sorting = "DESC";
    }//GEN-LAST:event_DescRadioButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(InquiryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(InquiryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(InquiryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(InquiryScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new InquiryScreen().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton AscRadioButton;
    private javax.swing.JRadioButton DescRadioButton;
    private javax.swing.JButton HomeBtn;
    private javax.swing.JTable InquiryTable;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JComboBox SearchByComboBox;
    private javax.swing.JTextField SearchField;
    private javax.swing.JButton SelectAll;
    private javax.swing.JComboBox SortByComboBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
