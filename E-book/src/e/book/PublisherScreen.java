/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package e.book;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class PublisherScreen extends javax.swing.JFrame {

    /**
     * Creates new form PublisherScreen
     */
    // To DO:
    // Handle all errors in add select remove with apropiate messages
    // Empty fields after action
    DefaultTableModel Booksmodel;
    DefaultTableModel Authorsmodel;

    ResultSet rs;
    ResultSet rs2;

    Statement stmt;// = SceneManager.stmt;
    //Connection con = SceneManager.con;

    private final String[] BookColumns = {"ISBN", "Title", "Price", "Page_Count", "Book_Type", "Publisher_Code"};
    private final String[] AuthorColumns = {"Author_ID", "First Name", "Last Name"};
    ImageIcon image = new ImageIcon("H:\\Unicurriculum\\Year2\\Sem1\\DataBase\\Project\\New folder\\E-book\\src\\e\\book\\E-Book.png");

    public PublisherScreen() {
        initComponents();
        this.setTitle("E-Books Collection");
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setIconImage(image.getImage());
        //SceneManager.connectToDB();
        SceneManager.drawColumns(BookColumns, Booksmodel, BooksTable);
        SceneManager.drawColumns(AuthorColumns, Authorsmodel, AuthorsTable);

    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BooksTable = new javax.swing.JTable();
        BTitleField = new javax.swing.JTextField();
        BPriceField = new javax.swing.JTextField();
        BISBNField = new javax.swing.JTextField();
        BPageCountField = new javax.swing.JTextField();
        BTypeField = new javax.swing.JTextField();
        RemoveBookBtn = new javax.swing.JButton();
        BSelectISBNField = new javax.swing.JTextField();
        AddBookBtn = new javax.swing.JButton();
        SelectBookBtn = new javax.swing.JButton();
        BRemoveISBNField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        UpdateBookBtn = new javax.swing.JButton();
        BPageCountLabel = new javax.swing.JLabel();
        BISBNLabel = new javax.swing.JLabel();
        BTitleLabel = new javax.swing.JLabel();
        BPublisherLabel = new javax.swing.JLabel();
        BPriceLabel = new javax.swing.JLabel();
        BTypeLabel = new javax.swing.JLabel();
        BPublisherCodeField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        AuthorsTable = new javax.swing.JTable();
        AuthorLNField = new javax.swing.JTextField();
        AuthorFNField = new javax.swing.JTextField();
        AuthorIDField = new javax.swing.JTextField();
        AddAuthorBtn = new javax.swing.JButton();
        SelectAuthorBtn = new javax.swing.JButton();
        AuthorSelectIDField = new javax.swing.JTextField();
        AuthorIDLabel = new javax.swing.JLabel();
        RemoveAuthorBtn = new javax.swing.JButton();
        AuthorRemoveIDField = new javax.swing.JTextField();
        UpdateAuthorBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        AuthorLNLabel = new javax.swing.JLabel();
        ABAuthorIDField = new javax.swing.JTextField();
        ABAuthorIDLabel = new javax.swing.JLabel();
        ABBookISBNLabel = new javax.swing.JLabel();
        ABBookISBNField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        AuthorFNLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        AddABBtn = new javax.swing.JButton();
        HomeButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(24, 146, 124));

        BooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(BooksTable);

        BISBNField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BISBNFieldActionPerformed(evt);
            }
        });

        RemoveBookBtn.setText("Remove Book");
        RemoveBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveBookBtnActionPerformed(evt);
            }
        });

        BSelectISBNField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSelectISBNFieldActionPerformed(evt);
            }
        });

        AddBookBtn.setBackground(new java.awt.Color(255, 255, 255));
        AddBookBtn.setText("Add Book");
        AddBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBookBtnActionPerformed(evt);
            }
        });

        SelectBookBtn.setText("Select");
        SelectBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectBookBtnActionPerformed(evt);
            }
        });

        BRemoveISBNField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BRemoveISBNFieldActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Select/Remove by ISBN");

        UpdateBookBtn.setText("Update");
        UpdateBookBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBookBtnActionPerformed(evt);
            }
        });

        BPageCountLabel.setForeground(new java.awt.Color(255, 255, 255));
        BPageCountLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BPageCountLabel.setText("Page Count");

        BISBNLabel.setForeground(new java.awt.Color(255, 255, 255));
        BISBNLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BISBNLabel.setText("ISBN");

        BTitleLabel.setForeground(new java.awt.Color(255, 255, 255));
        BTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BTitleLabel.setText("Title");

        BPublisherLabel.setForeground(new java.awt.Color(255, 255, 255));
        BPublisherLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BPublisherLabel.setText("Publisher Code");

        BPriceLabel.setForeground(new java.awt.Color(255, 255, 255));
        BPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BPriceLabel.setText("Price");

        BTypeLabel.setForeground(new java.awt.Color(255, 255, 255));
        BTypeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BTypeLabel.setText("Type");

        BPublisherCodeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BPublisherCodeFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(118, 118, 118)
                                .addComponent(BISBNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(AddBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BTitleField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BPageCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(BTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BPublisherLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(BPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BPageCountField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(BPublisherCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SelectBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BSelectISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RemoveBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BRemoveISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(UpdateBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BPageCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BISBNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BPriceLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTypeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BPublisherLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTitleField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BPriceField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BPageCountField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BTypeField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BPublisherCodeField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UpdateBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BSelectISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RemoveBookBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BRemoveISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        AuthorsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(AuthorsTable);

        AuthorLNField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AuthorLNFieldActionPerformed(evt);
            }
        });

        AddAuthorBtn.setText("Add Author");
        AddAuthorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAuthorBtnActionPerformed(evt);
            }
        });

        SelectAuthorBtn.setText("Select Author");
        SelectAuthorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAuthorBtnActionPerformed(evt);
            }
        });

        AuthorSelectIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AuthorSelectIDFieldActionPerformed(evt);
            }
        });

        AuthorIDLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AuthorIDLabel.setText("Author ID");

        RemoveAuthorBtn.setText("Remove Author");
        RemoveAuthorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveAuthorBtnActionPerformed(evt);
            }
        });

        AuthorRemoveIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AuthorRemoveIDFieldActionPerformed(evt);
            }
        });

        UpdateAuthorBtn.setText("Update");
        UpdateAuthorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateAuthorBtnActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(24, 146, 124));
        jLabel3.setText("Add Authors for Books");

        AuthorLNLabel.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        AuthorLNLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AuthorLNLabel.setText("Author's Last name");

        ABAuthorIDField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABAuthorIDFieldActionPerformed(evt);
            }
        });

        ABAuthorIDLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ABAuthorIDLabel.setText("Author ID");

        ABBookISBNLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ABBookISBNLabel.setText("Book ISBN");

        ABBookISBNField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ABBookISBNFieldActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(24, 146, 124));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 119, Short.MAX_VALUE)
        );

        AuthorFNLabel.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        AuthorFNLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AuthorFNLabel.setText("Author's First name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(24, 146, 124));
        jLabel5.setText("Select/Remove by Author ID");

        AddABBtn.setText("Add");
        AddABBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddABBtnActionPerformed(evt);
            }
        });

        HomeButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        HomeButton.setText("Home");
        HomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SelectAuthorBtn)
                    .addComponent(AddAuthorBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(AuthorIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(AuthorFNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(AuthorLNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(AuthorIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(AuthorFNField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(AuthorLNField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(UpdateAuthorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(40, 40, 40)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(471, 471, 471)
                                .addComponent(HomeButton)
                                .addGap(2, 2, 2)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(ABAuthorIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ABAuthorIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(ABBookISBNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(AddABBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ABBookISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel5)
                                .addGap(296, 296, 296))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(AuthorSelectIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(RemoveAuthorBtn)
                                .addGap(18, 18, 18)
                                .addComponent(AuthorRemoveIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(59, 59, 59))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(28, 28, 28)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(AuthorLNField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(AuthorIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(AuthorFNField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(UpdateAuthorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(AddAuthorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(AuthorIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(AuthorFNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(AuthorLNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(26, 26, 26)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SelectAuthorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AuthorSelectIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(RemoveAuthorBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AuthorRemoveIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ABAuthorIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ABAuthorIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ABBookISBNField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ABBookISBNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(AddABBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(HomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BISBNFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BISBNFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BISBNFieldActionPerformed

    private void AuthorLNFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AuthorLNFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AuthorLNFieldActionPerformed

    private void BSelectISBNFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSelectISBNFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BSelectISBNFieldActionPerformed

    private void ABAuthorIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABAuthorIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ABAuthorIDFieldActionPerformed

    private void BRemoveISBNFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BRemoveISBNFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BRemoveISBNFieldActionPerformed

    private void SelectBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectBookBtnActionPerformed
        // TODO add your handling code here:
        if (("".equals(BSelectISBNField.getText()))) {
            JOptionPane.showMessageDialog(this, "You have to enter Something to Search!");
            return;
        }
        int temp = Integer.parseInt(BSelectISBNField.getText().trim());
        Booksmodel = new DefaultTableModel();

        for (String Column : BookColumns) {
            Booksmodel.addColumn(Column);
        }
        BooksTable.setModel(Booksmodel);

        try {

            stmt = SceneManager.con.createStatement();
            rs = stmt.executeQuery("select * from Book where ISBN = " + temp);

            while (rs.next()) {
                Booksmodel.addRow(new Object[]{
                    rs.getInt("ISBN"), rs.getString("Title"), rs.getInt("Price"), rs.getInt("Page_Count"), rs.getString("Book_Type")
                        ,rs.getString("Publisher_code_B_fk")
                });
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }//GEN-LAST:event_SelectBookBtnActionPerformed

    private void AuthorSelectIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AuthorSelectIDFieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_AuthorSelectIDFieldActionPerformed

    private void SelectAuthorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAuthorBtnActionPerformed
        // TODO add your handling code here:
        if (("".equals(AuthorSelectIDField.getText()))) {
            JOptionPane.showMessageDialog(this, "You have to enter something to select!");
            return;
        }
        int temp = Integer.parseInt(AuthorSelectIDField.getText().trim());
        Authorsmodel = new DefaultTableModel();

        for (String Column : AuthorColumns) {
            Authorsmodel.addColumn(Column);
        }
        AuthorsTable.setModel(Authorsmodel);

        try {

            stmt = SceneManager.con.createStatement();
            rs = stmt.executeQuery("select * from Author where Author_ID = " + temp);//Todo: Order by Asc

            while (rs.next()) {
                Authorsmodel.addRow(new Object[]{
                    rs.getInt("Author_ID"), rs.getString("First_Name"), rs.getString("Last_Name")// Todo: A way to Generalize?
                });
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }


    }//GEN-LAST:event_SelectAuthorBtnActionPerformed

    private void RemoveAuthorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveAuthorBtnActionPerformed
        // TODO add your handling code here:
        if (("".equals(AuthorRemoveIDField.getText()))) {
            JOptionPane.showMessageDialog(this, "You have to enter something to remove!");
            return;
        }
        int AuthorID = Integer.parseInt(AuthorRemoveIDField.getText().trim());

        try {
            stmt.executeUpdate("delete from Book_Author where Author_ID_fk = " + AuthorID );
            stmt.executeUpdate("delete from Author where Author_ID = " + AuthorID );
            Authorsmodel.removeRow(0);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }//GEN-LAST:event_RemoveAuthorBtnActionPerformed

    private void AuthorRemoveIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AuthorRemoveIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AuthorRemoveIDFieldActionPerformed

    private void BPublisherCodeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BPublisherCodeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BPublisherCodeFieldActionPerformed

    private void AddABBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddABBtnActionPerformed
        // TODO add your handling code here:
        if (("".equals(ABAuthorIDField.getText())) || ("".equals(ABAuthorIDField.getText()))) {
            JOptionPane.showMessageDialog(this, "You have to Fill the fields to add!");
            return;
        }
        int AuthorID = Integer.parseInt(ABAuthorIDField.getText().trim());
        int BookISBN = Integer.parseInt(ABBookISBNField.getText().trim());

        try {
            stmt = SceneManager.con.createStatement();
            stmt.executeUpdate("insert into Book_Author Values(" + BookISBN + "," + AuthorID + ")");

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }//GEN-LAST:event_AddABBtnActionPerformed

    private void ABBookISBNFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ABBookISBNFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ABBookISBNFieldActionPerformed

    private void RemoveBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveBookBtnActionPerformed
        // TODO add your handling code here: Handle Errors
        if (("".equals(BRemoveISBNField.getText()))) {
            JOptionPane.showMessageDialog(this, "You have to enter Something to Remove!");
            return;
        }
        int ISBN = Integer.parseInt(BRemoveISBNField.getText().trim());

        try {
            stmt.executeUpdate("delete from Book_Author where ISBN_fk = " + ISBN);
            stmt.executeUpdate("delete from Book where ISBN = " + ISBN );
            Booksmodel.removeRow(0);

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }//GEN-LAST:event_RemoveBookBtnActionPerformed

    private void AddBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookBtnActionPerformed
        // TODO add your handling code here:
        if(("".equals(BISBNField.getText())) || ("".equals(BPriceField.getText())) || ("".equals(BTitleField.getText())) 
                || ("".equals(BPageCountField.getText())) || ("".equals(BPageCountField.getText())) 
                || ("".equals(BTypeField.getText())) || ("".equals(BPublisherCodeField.getText())))
        {
            JOptionPane.showMessageDialog(this, "You have to fill the rest of the fields to Add");
            return;
        }
        int ISBN = Integer.parseInt(BISBNField.getText().trim());
        int price = Integer.parseInt(BPriceField.getText().trim());
        String title = BTitleField.getText().trim();
        int pageCount = Integer.parseInt(BPageCountField.getText().trim());
        String type = BTypeField.getText().trim();
        int publisherCode = Integer.parseInt(BPublisherCodeField.getText().trim());
        
        Booksmodel = new DefaultTableModel();

        for (String Column : BookColumns) {
            Booksmodel.addColumn(Column);
        }
        BooksTable.setModel(Booksmodel);
        //Use execute statement for data manipulation like insert, update and delete 
        //and executeQuery for data retrieval like select
        try {

            stmt = SceneManager.con.createStatement();

            stmt.execute("insert into Book Values(" + ISBN + "," + price
                    + ",'" + title + "'," + pageCount + ",'" + type + "'," + publisherCode + ")");

            rs = stmt.executeQuery("select * from Book where ISBN = " + ISBN);

            while (rs.next()) {
                Booksmodel.addRow(new Object[]{
                    rs.getInt("ISBN"), rs.getString("Title"), rs.getInt("Price"), rs.getInt("Page_Count"), rs.getString("Book_Type")
                    ,rs.getString("Publisher_code_B_fk")
                });
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_AddBookBtnActionPerformed

    private void AddAuthorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAuthorBtnActionPerformed
        // TODO add your handling code here:
        if (("".equals(AuthorIDField.getText())) || ("".equals(AuthorFNField.getText())) 
                || ("".equals(AuthorLNField.getText()))) {
            JOptionPane.showMessageDialog(this, "You have to enter the rest of the fields to Add!");
            return;
        }
        int AID = Integer.parseInt(AuthorIDField.getText().trim());
        String AFN = AuthorFNField.getText().trim();
        String ALN = AuthorLNField.getText().trim();

        Authorsmodel = new DefaultTableModel();

        for (String Column : AuthorColumns) {
            Authorsmodel.addColumn(Column);
        }
        AuthorsTable.setModel(Authorsmodel);
        //Use execute statement for data manipulation like insert, update and delete 
        //and executeQuery for data retrieval like select
        try {

            stmt = SceneManager.con.createStatement();

            stmt.execute("insert into Author Values(" + AID + ",'" + AFN + "','" + ALN + "')");

            rs = stmt.executeQuery("select * from Author where Author_ID = " + AID);

            while (rs.next()) {
                Authorsmodel.addRow(new Object[]{
                    rs.getInt("Author_ID"), rs.getString("First_Name"), rs.getString("Last_Name")// Todo: A way to Generalize?
                });
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_AddAuthorBtnActionPerformed

    private void UpdateBookBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBookBtnActionPerformed
        // TODO add your handling code here:

        //ArrayList<ArrayList<String>> col = new ArrayList<ArrayList<String>>();
//        for (int i = 0; i < col.size();i++){
//            
//        }
        int ISBN = -9;
        int price = -8;
        String title = "";
        int pageCount = 0;
        String type = "";
        int publisherCode = -7;


        //update Book set Price = 10 where ISBN = 1
        Booksmodel = new DefaultTableModel();

        for (String Column : BookColumns) {
            Booksmodel.addColumn(Column);
        }
        BooksTable.setModel(Booksmodel);
        //Use execute statement for data manipulation like insert, update and delete 
        //and executeQuery for data retrieval like select
        try {
        // Naive Solution
            stmt = SceneManager.con.createStatement();
            if (!("".equals(BISBNField.getText()))) 
            {
                ISBN = Integer.parseInt(BISBNField.getText().trim());
                
                if (!("".equals(BPriceField.getText()))) 
                {
                    price = Integer.parseInt(BPriceField.getText().trim());
                    stmt.executeUpdate("update Book set Price =" + price + "where ISBN = " + ISBN);
                } 
                if (!("".equals(BTitleField.getText()))) 
                {
                    title = BTitleField.getText().trim();
                    stmt.executeUpdate("update Book set Title = '" + title + "' where ISBN = " + ISBN);
                } 
                if (!("".equals(BPageCountField.getText()))) 
                {
                    pageCount = Integer.parseInt(BPageCountField.getText().trim());
                    stmt.executeUpdate("update Book set Page_Count =" + pageCount + "where ISBN = " + ISBN);
                } 
                if (!("".equals(BTypeField.getText()))) 
                {
                    type = BTypeField.getText().trim();
                    stmt.executeUpdate("update Book set Book_Type = '" + type + "' where ISBN = " + ISBN);
                } 
                if (!("".equals(BPublisherCodeField.getText()))) 
                {
                    publisherCode = Integer.parseInt(BPublisherCodeField.getText().trim());
                    stmt.executeUpdate("update Book set Publisher_code_B_fk =" + publisherCode 
                            + "where ISBN = " + ISBN);
                }
            } 
            else 
            {
                JOptionPane.showMessageDialog(this, "You have to enter a ISBN number to update any field!");
                return;
            }
                      

            rs = stmt.executeQuery("select * from Book where ISBN = " + ISBN);

            while (rs.next()) {
                Booksmodel.addRow(new Object[]{
                    rs.getInt("ISBN"), rs.getString("Title"), rs.getInt("Price"), rs.getInt("Page_Count"), rs.getString("Book_Type")
                        ,rs.getString("Publisher_code_B_fk")

                });
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_UpdateBookBtnActionPerformed

    private void UpdateAuthorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateAuthorBtnActionPerformed
        // TODO add your handling code here:
        int AuthorID = -9;
        String FName = "";
        String LName = "";


        //update Book set Price = 10 where ISBN = 1
        Authorsmodel = new DefaultTableModel();

        for (String Column : AuthorColumns) {
            Authorsmodel.addColumn(Column);
        }
        AuthorsTable.setModel(Authorsmodel);
        //Use execute statement for data manipulation like insert, update and delete 
        //and executeQuery for data retrieval like select
        try {
        // Naive Solution
            stmt = SceneManager.con.createStatement();
            if (!("".equals(AuthorIDField.getText()))) 
            {
                AuthorID = Integer.parseInt(AuthorIDField.getText().trim());
                
                if (!("".equals(AuthorFNField.getText()))) 
                {
                    FName = AuthorFNField.getText().trim();
                    stmt.executeUpdate("update Author set First_Name = '" + FName + "' where Author_ID = " 
                            + AuthorID );
                } 
                if (!("".equals(AuthorLNField.getText()))) 
                {
                    LName = AuthorLNField.getText().trim();
                    stmt.executeUpdate("update Author set Last_Name = '" + LName + "' where Author_ID = "  
                            + AuthorID );
                } 
            }   
            else 
            {
                JOptionPane.showMessageDialog(this, "You have to enter an Author ID to update any field!");
                return;
            }
                      

            rs = stmt.executeQuery("select * from Author where Author_ID = " + AuthorID);

            while (rs.next()) {
                Authorsmodel.addRow(new Object[]{
                    rs.getInt("Author_ID"), rs.getString("First_Name"), rs.getString("Last_Name")// Todo: A way to Generalize?
                });
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_UpdateAuthorBtnActionPerformed

    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButtonActionPerformed
        // TODO add your handling code here:
        SceneManager.changeScreen(SceneManager.Screens.HOME);
    }//GEN-LAST:event_HomeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(PublisherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(PublisherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(PublisherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(PublisherScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new PublisherScreen().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ABAuthorIDField;
    private javax.swing.JLabel ABAuthorIDLabel;
    private javax.swing.JTextField ABBookISBNField;
    private javax.swing.JLabel ABBookISBNLabel;
    private javax.swing.JButton AddABBtn;
    private javax.swing.JButton AddAuthorBtn;
    private javax.swing.JButton AddBookBtn;
    private javax.swing.JTextField AuthorFNField;
    private javax.swing.JLabel AuthorFNLabel;
    private javax.swing.JTextField AuthorIDField;
    private javax.swing.JLabel AuthorIDLabel;
    private javax.swing.JTextField AuthorLNField;
    private javax.swing.JLabel AuthorLNLabel;
    private javax.swing.JTextField AuthorRemoveIDField;
    private javax.swing.JTextField AuthorSelectIDField;
    private javax.swing.JTable AuthorsTable;
    private javax.swing.JTextField BISBNField;
    private javax.swing.JLabel BISBNLabel;
    private javax.swing.JTextField BPageCountField;
    private javax.swing.JLabel BPageCountLabel;
    private javax.swing.JTextField BPriceField;
    private javax.swing.JLabel BPriceLabel;
    private javax.swing.JTextField BPublisherCodeField;
    private javax.swing.JLabel BPublisherLabel;
    private javax.swing.JTextField BRemoveISBNField;
    private javax.swing.JTextField BSelectISBNField;
    private javax.swing.JTextField BTitleField;
    private javax.swing.JLabel BTitleLabel;
    private javax.swing.JTextField BTypeField;
    private javax.swing.JLabel BTypeLabel;
    private javax.swing.JTable BooksTable;
    private javax.swing.JButton HomeButton;
    private javax.swing.JButton RemoveAuthorBtn;
    private javax.swing.JButton RemoveBookBtn;
    private javax.swing.JButton SelectAuthorBtn;
    private javax.swing.JButton SelectBookBtn;
    private javax.swing.JButton UpdateAuthorBtn;
    private javax.swing.JButton UpdateBookBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
